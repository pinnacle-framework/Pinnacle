version: "3.9"
services:
  # Resolv container hostnames
  # ------------------------------
  host-mapper:
    image: dvdarias/docker-hoster
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - /etc/hosts:/tmp/hosts

  # MongoDB Datastore
  # ------------------------------
  mongodb:
    image: mongo:6
    hostname: mongodb
    ports:
      - "27017:27017"
    command : ["/bin/sh", "-c", "mongod --replSet rs0 --port 27017 --bind_ip 0.0.0.0 --dbpath /data/db/"]

  mongo-init:
    image: mongo:6
    depends_on:
      - mongodb
    volumes:
      - ./mongo-init.sh:/scripts/mongo-init.sh
    env_file: # Read From
    - users.env
    command: sh -c "/scripts/mongo-init.sh"

#  # Dask Parallel Computation
#  # ------------------------------
#  dask-scheduler:
#    build: # Build the latest SuperDuperDB code
#      context: ../../../. # Build from project's root
#      dockerfile: ./images/pinnacledb/Dockerfile
#    hostname: scheduler
#    ports:
#      - "8786:8786" # Peer communication
#      - "8787:8787" # HTTP Dashboard
#    volumes:
#        - ../../../:/app # mount the root path
#    command:
#      - /bin/sh
#      - -c
#      - |
#        cd /app
#
#        # Basic stuff needed for pickling.
#        # No complex dependencies
#        pip install .
#        dask scheduler
#
#
#  dask-worker:
#    depends_on:
#      -   dask-scheduler
#    build: # Build the latest SuperDuperDB code
#      context: ../../../. # Build from project's root
#      dockerfile: ./images/pinnacledb/Dockerfile
#    volumes:
#        - ../../../:/app # mount the root path
##    environment:
##        - pinnacleDB_DATA_BACKEND = 'mongodb://mongodb:27017'
#    command:
#      - /bin/sh
#      - -c
#      - |
#        cd /app
#
#        # Require all computational dependencies
#        pip install .[torch,apis,docs,quality,testing]
#        dask worker "tcp://scheduler:8786"
#    deploy:
#      replicas: 1


  # SuperDuperDB Notebooks
  # ------------------------------
  #pinnacledb:
  #  depends_on:
  #    - mongodb
  #    - dask-scheduler
  #  image: pinnacledb/demo:0.0.15
  #  ports:
  #    - "8888:8888"
  #  command: ["jupyter", "lab", "--ip='*'", "--LabApp.token=''"]
  #  environment:
  #      DASK_URI: "tcp://dask-scheduler:8786"
  #      MONGODB_URI: "mongodb://${SDDB_USER}:${SDDB_PASS}@mongodb"
