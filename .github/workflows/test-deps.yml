name: test dependencies

on:
  schedule:
    # Triggers the workflow every day at 0130 UTC
    - cron: "30 1 * * *"
  workflow_dispatch:

jobs:
    test-nodevdeps:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
              # "macos-latest" removed for now as Docker action is slow
              os: [ "ubuntu-latest" ]  # TODO: add "windows-latest"
              python-version: ["3.8", "3.9", "3.10", "3.11"]
        defaults:
            run:
              shell: bash
        steps:
            - name: Check out repository
              uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              id: setup-python
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}

            - name: Install core dependencies only
              run: python -m pip install .

            # TODO: vendor only the parts that we need from the following action
            - name: Docker
              if: ${{ matrix.os == 'macos-latest' }}
              uses: douglascamata/setup-docker-macos-action@5f13b5b88a09467c10f8462810902b60ff70fb75

            - name: test CLI
              run: python -m pinnacledb serve

    test-devdeps:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
            # "macos-latest" removed for now as Docker action is slow
              os: [ "ubuntu-latest" ]  # TODO: add "windows-latest"
              python-version: ["3.8", "3.9", "3.10", "3.11"]
        defaults:
            run:
              shell: bash
        steps:
            - name: Check out repository
              uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              id: setup-python
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}

            - name: Install developer dependencies
              run: python -m pip install requirements/requirements-dev.in

            # TODO: vendor only the parts that we need from the following action
            - name: Docker
              if: ${{ matrix.os == 'macos-latest' }}
              uses: douglascamata/setup-docker-macos-action@5f13b5b88a09467c10f8462810902b60ff70fb75

            - name: lint and test
              run: |
                make lint
                make test

