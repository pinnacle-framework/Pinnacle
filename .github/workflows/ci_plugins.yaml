name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  prepare_matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get changed files for plugins
        id: changed-files-specific
        uses: tj-actions/changed-files@v44

      - name: Filter changed plugins and set output
        id: set-matrix
        run: |
          IFS=$'\n'
          changed_files=(${{ steps.changed-files-specific.outputs.all_changed_files }})
          declare -A plugin_set
          for file in "${changed_files[@]}"; do
            if [[ "$file" =~ ^plugins/ ]]; then
              plugin_name=$(echo "$file" | cut -d '/' -f 2)
              plugin_set[$plugin_name]=1
            fi
          done
          plugins=("${!plugin_set[@]}")
          matrix_json=$(printf '%s\n' "${plugins[@]}" | jq -R -s -c '{plugin: split("\n")[:-1]}')
          echo "matrix_json=$matrix_json"
          echo "Changed plugins: ${plugins[*]}"
          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT
          echo "matrix_json: $matrix_json"

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  test_plugin:
    needs: prepare_matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare_matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create and activate virtual environment
        run: |
          python -m venv ~/venv
          source ~/venv/bin/activate

      - name: Install package and plugin
        run: |
          python -m pip install .
          python -m pip install plugins/${{ matrix.plugin }}

      - name: Run tests for changed plugin
        run: |
          source ~/venv/bin/activate
          pytest -s plugins/${{ matrix.plugin }}/plugin_test
