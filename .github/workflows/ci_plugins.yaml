name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  prepare_matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get changed files for plugins
        id: changed-files-specific
        uses: tj-actions/changed-files@v44

      - name: Filter changed plugins and set output
        id: set-matrix
        run: |
          IFS=$'\n'
          changed_files=(${{ steps.changed-files-specific.outputs.all_changed_files }})
          declare -A plugin_set
          for file in "${changed_files[@]}"; do
            if [[ "$file" =~ ^plugins/ && ! "$file" =~ ^plugins/template/ ]]; then
              plugin_name=$(echo "$file" | cut -d '/' -f 2)
              plugin_set[$plugin_name]=1
            fi
          done
          plugins=("${!plugin_set[@]}")
          matrix_json=$(printf '%s\n' "${plugins[@]}" | jq -R -s -c '{plugin: split("\n")[:-1]}')
          echo "matrix_json=$matrix_json"
          echo "Changed plugins: ${plugins[*]}"
          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT
          echo "matrix_json: $matrix_json"

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  test_plugin:
    needs: prepare_matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare_matrix.outputs.matrix)}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Pip Packages
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies

      - name: Install SuperDuperDB Project
        run: |
          # Install core and testsuite dependencies on the cached python environment.
          python -m pip install .
          python -m pip install -r deploy/installations/testenv_requirements.txt
      - name: Install DevKit (docs, testing, etc)
        run: |
          make install_devkit
      - name: Install Plugin
        run: |
          python -m pip install 'plugins/${{ matrix.plugin }}[test]'

      - name: Optionally run custom CI script
        run: |
          if [ -f "plugins/${{ matrix.plugin }}/.ci_extend.sh" ]; then
            echo "Running custom CI script..."
            bash ./plugins/${{ matrix.plugin }}/.ci_extend.sh
          else
            echo "No custom CI script found, skipping..."
          fi
   
      # - name: Lint and type-check
      #   run: |
      #     make lint-and-type-check

      - name: Plugin Testing
        run: |
          export PYTHONPATH=./
          pytest --cov=pinnacle --cov-report=xml plugins/${{ matrix.plugin }}/plugin_test
