name: Release
on:
  workflow_dispatch:  # allows triggering a github action manually - see 'Actions' tab
    inputs:
      version:
        description: Version number to be attached to Python package
        type: string
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
        run:
          shell: bash
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
 
      - name: Install dependencies
        run: python -m pip install --upgrade build

      - name: Update version number
        run: |
          sed -i "s/__version__ = '0.0.0'/__version__ = '${{ github.event.inputs.version }}'/" pinnacledb/__init__.py

      - name: Build
        run: python -m build
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./dist

  test-build:
    needs: ['build']
    # TODO: decide whether it's worth it to run tests on multiple OSes
    runs-on: ubuntu-latest
    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
              
        # Artifacts located in artifact/
      - name: Download artifact
        uses: actions/download-artifact@v3

      - name: install wheel
        run: 'pip install artifact/*.whl'

      - name: install pytest
        run: pip install pytest

        # This checks that all modules can be imported correctly
      - name: test imports
        run: python -m pytest test/unittest/test_impall.py
      
      - name: test CLI
        run: python -m pinnacledb
  
  create-release:
    needs: ['test-build']
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      
        # Artifacts located in artifact/
      - name: Download artifact
        uses: actions/download-artifact@v3

      - name: create release
        run: >
          gh release create --draft --repo ${{ github.repository }}
          ${{ github.ref_name }}
          artifact/*
        env:
          GH_TOKEN: ${{ github.token }}
